SingleVaR <- function (return, confidence_level, wealth, T) {
  
  Standard_Deviation <- lapply(return, function(i){sd(i)})
  Standard_Deviation <- as.data.frame(Standard_Deviation)
  alpha <- qnorm(confidence_level)
  SigmaW <- wealth * Standard_Deviation
  SingleVaR <- alpha * SigmaW*sqrt(T)
  return_column_name <- data.frame(vector_column_name = c(colnames(return)))
  new_column_name <- sub('(^\\w+)\\s.+','\\1',return_column_name$vector_column_name)
  colnames(SingleVaR) <- paste0(new_column_name)
  rownames(SingleVaR) <- paste0("VaR (", confidence_level, ", ", T, ")")
  return(SingleVaR)
  assign("output", SingleVaR, envir=globalenv())
}

#### TEST

# 1) download returns
Return_Download <- function (ticker, price_type=4, from, to) {
  Return <- lapply(ticker, function(i) {(getSymbols(i, from = from, to = to, auto.assign=FALSE)[, price_type])})
  Return <- do.call(merge, Return)
  Return <- na.omit(Return)
  Return <- lapply(Return, function(i) {dailyReturn(i)})
  Return <- do.call(merge, Return)
  Return <- Return[-1]
  colnames(Return)<- paste(ticker, "Daily Return")
  return(Return)
}

MyStocks <- c("GE", "AAPL")
MyReturns <- Return_Download(MyStocks, 4, from = "2010-01-01", to = "2018-01-01")
MyWealth <- c(100000, 50000)

## compute VaR for the single positions
x<- SingleVaR(MyReturns, 0.99, MyWealth, 100)




